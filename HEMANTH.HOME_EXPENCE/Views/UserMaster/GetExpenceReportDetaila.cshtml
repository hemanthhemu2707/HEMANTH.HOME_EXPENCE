@model HEMANTH.HOME_EXPENCE.Models.UserMaster.ReportModel
@{
    Layout = "~/Views/Shared/_user_layouy.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<div class="container mt-5">
    <!-- Date pickers for from and to dates -->
    <div class="row">
        <div class="col-12 col-md-4">
            <label for="fromDate">From Date</label>
            <input type="date" id="fromDate" class="form-control" value="@Model.FromDate.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-12 col-md-4">
            <label for="toDate">To Date</label>
            <input type="date" id="toDate" class="form-control" value="@Model.ToDate.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-12 col-md-4">
            <button id="loadBtn" style="width:100%;margin-top:32px !important;" class="btn btn-primary mt-3">Load Transaction&nbsp;<i class="fa fa-search"></i></button>
        </div>
    </div>

    <!-- Transaction Cards -->
    <div id="transactionDetails" class="mt-5">
        <h3>Transaction Details</h3>
        <div class="col-12 col-md-12">
            <label for="searchQuery">Search User</label>
            <input type="text" style="width:100%  !important" id="searchQuery" class="form-control" placeholder="Search by name or description" value="@Model.SearchQuery" />
        </div>
        <div class="col-12 col-md-12">
            <button id="generatePdfBtn" style="width:100%;" class="btn btn-success mt-3">Generate Transaction &nbsp;<i class="fa fa-download" style="color:"></i> </button>
        </div>
        <div id="transactionList" class="row mt-3">
            @foreach (var transaction in Model.Transactions)
            {
                @Html.Hidden("FamilyName", transaction.FamilyName)

                <div class="col-12 mb-3">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <div class="transaction-icon d-flex justify-content-between align-items-center">
                                <div>
                                    <p class="card-date">@transaction.Date.ToString("dd-MMM-yyyy")</p>
                                    <p class="card-weekday">@transaction.Date.ToString("dddd")</p>
                                </div>
                                <div class="transaction-details text-end">
                                    <h5 class="card-title">@transaction.UserName</h5>
                                    <p class="card-text">@transaction.Description</p>
                                </div>
                            </div>
                            <div class="amount mt-3">
                                <p><strong class="amount-text">₹@transaction.Amount</strong></p>
                            </div>

                            <!-- Subcards for split details -->
                            <div class="mt-3">
                                <h6>Spitted Details</h6>
                                @foreach (var split in transaction.SplitDetails)
                                {
                                    <div class="sub-card p-2 mb-2 shadow-sm">
                                        <span class="fw-bold text-start">User: @split.UserName</span>

                                        <div class="d-flex justify-content-between">
                                            <span class="fw-bold text-end">Amount: ₹@split.Amount</span>
                                        </div>
                                    </div>

                                }
                            </div>

                            <!-- Total price -->
                            <div class="total-price mt-3 text-end">
                                <p><strong>Total: ₹@transaction.Amount</strong></p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.19/jspdf.plugin.autotable.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#loadBtn').click(function() {
                var fromDate = $('#fromDate').val();
                var toDate = $('#toDate').val();
                var searchQuery = $('#searchQuery').val();

                $.post('@Url.Action("GetExpenceReportDetaila", "UserMaster")', {
                    fromDate: fromDate,
                    toDate: toDate,
                    searchQuery: searchQuery
                }, function(response) {
                    $('#transactionList').html($(response).find('#transactionList').html());
                });
            });

            $('#searchQuery').on('input', function() {
                var searchTerm = $(this).val().toLowerCase();
                $('#transactionList .card').each(function() {
                    var userName = $(this).find('.card-title').text().toLowerCase();
                    var description = $(this).find('.card-text').text().toLowerCase();

                    if (userName.includes(searchTerm) || description.includes(searchTerm)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

        $('#generatePdfBtn').click(function() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Header Information
            var familyName = $('input[name="FamilyName"]').first().val(); // Fetch the family name dynamically
            doc.setFontSize(16);
            doc.text('Detailed Report', doc.internal.pageSize.width / 2, 7, null, null, 'center');
            doc.setFontSize(18);
            doc.text('Family: ' + familyName, doc.internal.pageSize.width / 2, 18, null, null, 'center');
            doc.setFontSize(12);
            var currentDate = new Date().toLocaleDateString();
            doc.text('Date: ' + currentDate, doc.internal.pageSize.width - 22, doc.internal.pageSize.height - 3, null, null, 'right');
            var fromDate = $('#fromDate').val();
            var toDate = $('#toDate').val();
            doc.text('From: ' + fromDate, 20, 30);
            doc.text('To: ' + toDate, 160, 30);

            // Transaction Table
            var rows = [];
            var serial = 1;
            var totalAmount = 0;

            $('#transactionList .card').each(function() {
                var mainRow = [];
                var subDetails = [];
                var amountText = $(this).find('.amount-text').text();
                var amount = parseFloat(amountText.replace(/[^\d.-]/g, '')) || 0;

                // Main Transaction Row
                mainRow.push(serial++);
                mainRow.push($(this).find('.card-title').text());
                mainRow.push($(this).find('.card-date').text());
                mainRow.push($(this).find('.card-weekday').text());
                mainRow.push($(this).find('.card-text').text());
                mainRow.push(amount.toFixed(2));
                rows.push({ row: mainRow, isMain: true });

                // Add Sub-details (if any)
                $(this).find('.sub-card').each(function() {
                    var subRow = [];
                    subRow.push(''); // No serial
                    subRow.push(''); // No username
                    subRow.push(''); // No date
                    subRow.push(''); // No week
                    subRow.push($(this).find('.text-start').text().replace('User: ', '')); // Sub-detail username
                    subRow.push($(this).find('.text-end').text().replace('Amount: ₹', '')); // Sub-detail amount
                    rows.push({ row: subRow, isMain: false });
                });

                totalAmount += amount;
            });

            // Render Table with Rowspan
            doc.autoTable({
                head: [['S.No', 'User Name', 'Date', 'Week', 'Description', 'Amount']],
                body: rows.map(r => r.row),
                startY: 40,
                theme: 'grid',
                styles: {
                    valign: 'middle',
                    fontSize: 10,
                },
                didDrawCell: function(data) {
                    if (data.column.index === 1 && rows[data.row.index].isMain) {
                        // Add rowspan for the user column
                        var subDetailsCount = rows.slice(data.row.index + 1).filter(r => !r.isMain).length;
                        data.cell.rowSpan = subDetailsCount + 1;
                    }
                },
            });

            // Total Row
            doc.setFontSize(12);
            doc.setTextColor(255, 255, 255);
            doc.setFillColor(255, 105, 180);
            var totalRow = [['', '', '', '', 'Total', totalAmount.toFixed(2)]];
            doc.autoTable({
                head: "",
                body: totalRow,
                startY: doc.autoTable.previous.finalY + 5,
                theme: 'grid',
                styles: { halign: 'center', fillColor: [255, 105, 180] },
                columnStyles: { 5: { halign: 'right' } }
            });

            doc.save('transaction_report.pdf');
        });
                });
    </script>
}

<style>
    .transaction-item {
        background-color: #f9f9f9;
        padding: 10px;
        border-radius: 8px;
        transition: transform 0.3s ease-in-out;
        max-width: 100%; /* Increase width */
        margin: auto;
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

        .transaction-item:hover {
            transform: scale(1.05);
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
        }

    .transaction-icon {
        font-size: 16px;
        color: white;
        background-color: #007bff;
        padding: 10px;
        border-radius: 5%;
        margin-bottom: 10px;
    }

    .transaction-details {
        flex-grow: 1;
    }

    .amount {
        margin-top: 10px;
        border: 2px solid blue;
        padding: 5px;
        border-radius: 5px;
        font-weight: bold;
    }

    .pie-chart {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
    }

        .pie-chart canvas {
            width: 70% !important;
        }

    .sub-card {
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 14px;
    }

    .total-price {
        font-weight: bold;
        color: #007bff;
        border-top: 1px solid #ddd;
        padding-top: 10px;
    }

</style>
